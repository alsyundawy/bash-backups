#!/bin/sh
# tadaen sylvemane | jason gibson
# loops through all folders in /home/* and checks
# if folder = actual user. creates directories and
# backs up as needed.
#
# requires dbus-x11 for the gsettings commands.

# variables

# determine version of linux used
DISTVERSION=$(grep ^ID= /etc/os-release | cut -d= -f2)
# hostname
LOCALHN=$(uname -n)
# backup target path
DESTPATH=/.localbackups/"$LOCALHN"
# number of full duplicity backups to keep before autoremoval
DUPFULL=3
# time to keep rdiff-backups before autoremoval
RDIFKEEP=6W
# directory block temp file
DIRBLOCKTMP=/tmp/userbackups.ignore.tmp
# directories  in user folders to block from duplicity and
# do with rdiff-backup
DIRECBLOCK=".kodi 
.minecraft
.var
.steam 
.wine 
.gnupg 
.thunderbird 
.local/share/Steam 
Videos 
Pictures 
Downloads"

# begin script #

# check if target mountpoint. prevents backing up to main drive

mountpoint $(dirname "$DESTPATH") || exit 1

# make target directory as needed

[ -d "$DESTPATH"/"$DISTVERSION" ] || mkdir -p "$DESTPATH"/"$DISTVERSION"

# make temp file with duplicity ignored directories


# loop through users in /home/*

for user in /home/* ; do
	CURUSR=$(basename "$user")
	BUDIRPATH="$DESTPATH"/"$DISTVERSION"/"$CURUSR"
	
	# confirm folder = real user and is not a stray folder. clonezilla creates
	# a partimag folder in /home. this avoids such.
	
	grep "$CURUSR" < /etc/passwd || continue
	
	# create backup directory and chown to proper user
	
	if [ ! -d "$BUDIRPATH" ] ; then
		mkdir -p "$BUDIRPATH"
		chown "$CURUSR":"$CURUSR" "$BUDIRPATH"
	fi

	# make large data directory

	DATADIRPATH=$(dirname $(dirname "$BUDIRPATH"))/DATA/"$CURUSR"

	if [ ! -d "$DATADIRPATH" ] ; then
		mkdir -p "$DATADIRPATH"
		chown "$CURUSR":"$CURUSR" "$DATADIRPATH"
	fi

	# normal folders to block from duplicity backup and done in rdiff-backup

	for dir in $DIRECBLOCK ; do
		CURDIR=/home/"$CURUSR"/"$dir"
		[ -d "$CURDIR" ] || su -c "mkdir -p ${CURDIR}" "$CURUSR"
		[ -f "$CURDIR"/.nobackup ] || su -c "touch ${CURDIR}/.nobackup" "$CURUSR"
	done

	# stage one create duplicity backup of small data
	# .nobackup file in a given directory prevents it from being added to
	# duplicity backup.
	
	which duplicity && DUPBACK=y

	if [ "$DUPBACK" = y ] ; then
		su -c "duplicity \
			--exclude-if-present .nobackup \
			--full-if-older-than 30D \
			--no-encryption \
			--volsize=1024 \
			/home/${CURUSR} \
			file://${BUDIRPATH}" "$CURUSR"
		
		# stage two clean duplicity backups
		
		su -c "duplicity \
			remove-all-but-n-full ${DUPFULL} \
			--force \
			file://${BUDIRPATH}" "$CURUSR"
	fi
	
	# stage three. set deja-dup to target backup folder so user doesn't have to
	# manually do it. this depends on deja-dup & dbus-x11 being installed
	
	which deja-dup && DEJABACK=y
	
	if [ "$DEJABACK" = y ] ; then
		su -c "dbus-launch gsettings set org.gnome.DejaDup backend local && \
		dbus-launch gsettings set org.gnome.DejaDup.Local folder ${BUDIRPATH}" \
		"$CURUSR"
	fi
	
	# stage 4 make sure rdiff-backup is installed & create backup of rarely 
	# changed data

	which rdiff-backup && RDIFFBACK=y

	if [ "$RDIFFBACK" = y ] ; then
		[ -f "$DIRBLOCKTMP" ] && rm "$DIRBLOCKTMP"
		echo "$DIRECBLOCK" | while read line ; do
			echo "/home/${CURUSR}/${line}" >> "$DIRBLOCKTMP"
		done
		echo "- /home/${CURUSR}/**" >> "$DIRBLOCKTMP"
		su -c "rdiff-backup \
			--exclude /home/${CURUSR}/Videos \
			--exclude /home/${CURUSR}/Downloads \
			--include-globbing-filelist \"${DIRBLOCKTMP}\" \
			--exclude /home/${CURUSR} \
			/home/${CURUSR} ${DATADIRPATH}" "$CURUSR"

	# stage 5 clean rdiff-backups of unchanging data

		su -c "rdiff-backup \
			--remove-older-than ${RDIFKEEP} \
			${DATADIRPATH}" "$CURUSR"
	fi
done

# end script #
