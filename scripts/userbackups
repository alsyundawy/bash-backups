#!/bin/sh
# tadaen sylvemane | jason gibson
# loops through all folders in /home/* and checks
# if folder = actual user. creates directories and
# backs up as needed.
#
# requires dbus-x11 for the gsettings commands.

# variables
# backup target path
DESTPATH=/mnt/localbackups
# number of full duplicity backups to keep before autoremoval
DUPFULL=3
# wow directory in bottles
WOW=WoW
# wtlib directory in bottles
WTLIB=WatchtowerLibrary

# functions #

dup_inst_fail() {
  if ! which duplicity ; then
    echo "duplicity not installed. please install & try again"
    exit
  fi
}

mk_bu_dir() {
  if [ ! -d "$2" ] ; then
    mkdir -p "$2"
    chown "$1":"$1" "$2"
  fi
}

usr_bu_dup() { # working
  dup_inst_fail
  mk_bu_dir "$1" "$2"
  su -c "duplicity \
    --full-if-older-than 30D \
    --no-encryption \
    --volsize=256 \
    --exclude-if-present .nobackup \
    --exclude=/home/${1}/.var \
    --exclude=/home/${1}/.local/share/Steam \
    --exclude=/home/${1}/.steam \
    --exclude=/home/${1}/.local/share/flatpak \
    /home/${1} \
    file://${2}" "$1"
    # stage two clean duplicity backup
  su -c "duplicity \
      remove-all-but-n-full ${DUPFULL} \
      --force \
      file://${2}" "$1"
}

bottles_backup() {
  # bottles data directory
  BOT_DIR=/home/"$1"/.var/app/com.usebottles.bottles/data/bottles/bottles

  if [ "$BOT_DIR" ] ; then
    # world of warcraft
    WOW_DIR="$BOT_DIR"/"$WOW"/drive_c/"Program Files (x86)"/"World of Warcraft"
    if [ "$WOW_DIR" ] ; then
      mk_bu_dir "$1" "$2"/"$WOW"
      for i in _retail_ Data ; do
        rsync -au --delete-during "$WOW_DIR"/"$i" "$2"/"$WOW"
      done
    fi

    # watchtower library  
    WTLIB_DIR="$BOT_DIR"/"$WTLIB"
    mk_bu_dir "$1" "$2"/"$WTLIB"
    if [ "$WTLIB_DIR" ] ; then
      rsync -au --delete-during "$WTLIB_DIR" "$2"
    fi
  fi
}

fp_backup() {
  FP_DIR=/home/"$1"/.local/share/flatpak

  if [ "$FP_DIR" ] ; then
    mk_bu_dir "$1" "$2"/FLATPAK
    rsync -au --delete-during "$FP_DIR" "$2"/FLATPAK/
  fi

  FP_DATA=/home/"$1"/.var

  dup_inst_fail
  if [ "$FP_DATA" ] ; then
    mk_bu_dir "$1" "$2"/FLATPAK/DATA
    su -c "duplicity \
    --full-if-older-than 30D \
    --no-encryption \
    --volsize=512 \
    --exclude-if-present .nobackup \
    ${FP_DATA} \
    file://${2}/FLATPAK/DATA" "$1"
    # stage two clean duplicity backups
    su -c "duplicity \
      remove-all-but-n-full ${DUPFULL} \
      --force \
      file://${2}/FLATPAK/DATA" "$1"
  fi  
}

# begin script #

which duplicity && DUPBACK=y
if [ "$DUPBACK" = y ] ; then
  # check if target mountpoint. prevents backing up to main drive
  if ! mountpoint "$DESTPATH" ; then
    echo "backup target not a mountpoint. exiting!"
    exit
  fi
  # loop through users directories
  for user in /home/* ; do
      CURUSR=$(basename "$user")
      # confirm folder = real user and is not a stray folder. clonezilla creates
      # a partimag folder in /home. this avoids such.
      grep "$CURUSR" < /etc/passwd > /dev/null || continue
      # set backup path
      BUDIRPATH="$DESTPATH"/"$CURUSR"

      usr_bu_dup "$CURUSR" "$BUDIRPATH"
      fp_backup "$CURUSR" "$DESTPATH"/BIGDATA/"$CURUSR"
      bottles_backup "$CURUSR" "$DESTPATH"/BIGDATA/"$CURUSR"
  done
else 
  echo "duplicity not installed. please install & try again"
  exit
fi

# end script #